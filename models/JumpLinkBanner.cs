// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Dororin.JumpLinkBanner;
//
//    var jumpLinkBanner = JumpLinkBanner.FromJson(jsonString);

namespace Dororin.JumpLinkBanner
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class JumpLinkBanner
    {
        [JsonProperty("header")]
        public string Header { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("anchorLink1")]
        public AnchorLink AnchorLink1 { get; set; }

        [JsonProperty("anchorLink2")]
        public AnchorLink AnchorLink2 { get; set; }

        [JsonProperty("anchorLink3")]
        public AnchorLink AnchorLink3 { get; set; }
    }

    public partial class AnchorLink
    {
        [JsonProperty("targetItem")]
        public TargetItem TargetItem { get; set; }
    }

    public partial class TargetItem
    {
        [JsonProperty("url")]
        public string Url { get; set; }
    }

    public partial class JumpLinkBanner
    {
        public static JumpLinkBanner FromJson(string json) => JsonConvert.DeserializeObject<JumpLinkBanner>(json, Dororin.JumpLinkBanner.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this JumpLinkBanner self) => JsonConvert.SerializeObject(self, Dororin.JumpLinkBanner.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
