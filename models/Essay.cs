// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Dororin.Essay;
//
//    var essay = Essay.FromJson(jsonString);

namespace Dororin.Essay
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Essay
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("body")]
        public string Body { get; set; }

        [JsonProperty("citation")]
        public string Citation { get; set; }

        [JsonProperty("furtherReading")]
        public string FurtherReading { get; set; }

        [JsonProperty("carouselObjectIds")]
        public string CarouselObjectIds { get; set; }

        [JsonProperty("authors")]
        public Authors Authors { get; set; }

        [JsonProperty("primaryEssays")]
        public PrimaryEssays PrimaryEssays { get; set; }

        [JsonProperty("secondaryEssays")]
        public SecondaryEssays SecondaryEssays { get; set; }

        [JsonProperty("pullquote")]
        public string Pullquote { get; set; }

        [JsonProperty("publishingInformation")]
        public string PublishingInformation { get; set; }

        [JsonProperty("importedId")]
        public string ImportedId { get; set; }

        [JsonProperty("PostId")]
        public string PostId { get; set; }

        [JsonProperty("code")]
        public string Code { get; set; }

        [JsonProperty("publishedDate")]
        public string PublishedDate { get; set; }
    }

    public partial class Authors
    {
        [JsonProperty("author")]
        public Author[] Author { get; set; }
    }

    public partial class Author
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("authorName")]
        public string AuthorName { get; set; }

        [JsonProperty("affiliation")]
        public string Affiliation { get; set; }
    }

    public partial class PrimaryEssays
    {
        [JsonProperty("essayLinks")]
        public EssayLink[] EssayLinks { get; set; }
    }

    public partial class EssayLink
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("code")]
        public string Code { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("createdDate")]
        public object CreatedDate { get; set; }

        [JsonProperty("url")]
        public object Url { get; set; }

        [JsonProperty("pullQuote")]
        public string PullQuote { get; set; }
    }

    public partial class SecondaryEssays
    {
        [JsonProperty("essayLinks")]
        public EssayLink[] EssayLinks { get; set; }
    }

    public partial class Essay
    {
        public static Essay FromJson(string json) => JsonConvert.DeserializeObject<Essay>(json, Dororin.Essay.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Essay self) => JsonConvert.SerializeObject(self, Dororin.Essay.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
